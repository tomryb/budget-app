{"version":3,"sources":["data/fetch/budget.fetch.js","data/fetch/common.fetch.js","data/fetch/index.js","utils/index.js","pages/Budget/components/BudgetCategoryList/BudgetCategoryList.css.js","pages/Budget/components/BudgetCategoryList/ParentCategory.js","pages/Budget/components/BudgetCategoryList/CategoryItem.js","pages/Budget/components/BudgetCategoryList/BudgetCategoryList.js","pages/Budget/components/BudgetCategoryList/index.js"],"names":["fetchBudget","a","id","fetch","process","REACT_APP_API_URL","response","json","data","fetchBudgetedCategories","addTransaction","budgetId","method","headers","body","JSON","stringify","fetchAllCategories","budget","common","formatCurrency","value","number","Number","Intl","NumberFormat","style","currency","format","formatDate","string","date","Date","DateTimeFormat","Category","styled","div","theme","colors","gray","dark","spacing","xs","ParentCategory","normal","CategoryItem","light","CategoryAmount","span","negative","red","green","name","onClick","categories","transactions","amount","categoryLeftValue","useMemo","budgeted","reduce","acc","category","error","spentOnParentCategory","filter","transaction","find","categoryId","amountValue","item","spentOnCategory","totalLeft","BudgetCategoryList","useQuery","API","allCategories","budgetedCategories","dispatch","useContext","BudgetContext","store","setSelectedParentCategoryId","useCallback","type","payload","t","useTranslation","handleClickParentCategoryRef","useRef","budgetedCategoriesByParent","groupBy","parentCategory","handleClearParentCategorySelect","current","handleSelectRestParentCategories","listItems","Object","entries","map","parentName","Trigger","children","budgetedCategory","key","totalSpent","restToSpent","totalAmount","amountTaken","categoryExpenses","Math","max","notBudgetedTransaction","notBudgetedExpenses","availableForRestCategories","items","clickRef"],"mappings":"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","file":"static/js/4.5c451fba.chunk.js","sourcesContent":["export const fetchBudget = async ({ id }) => {\r\n  const response = await fetch(\r\n    `${process.env.REACT_APP_API_URL}/budgets/${id}/?_embed=transactions`\r\n  );\r\n  const data = await response.json();\r\n\r\n  return data;\r\n};\r\n\r\nexport const fetchBudgetedCategories = async ({ id }) => {\r\n  const response = await fetch(\r\n    `${process.env.REACT_APP_API_URL}/budgets/${id}/budgetCategories`\r\n  );\r\n  const data = await response.json();\r\n\r\n  return data;\r\n};\r\n\r\nexport const addTransaction = async ({ budgetId, data }) => {\r\n  const response = await fetch(\r\n    `${process.env.REACT_APP_API_URL}/budgets/${budgetId}/transactions`,\r\n    {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    }\r\n  );\r\n\r\n  return await response.json();\r\n};\r\n","export const fetchAllCategories = async () => {\r\n  const response = await fetch(\r\n    `${process.env.REACT_APP_API_URL}/categories/?_expand=parentCategory`\r\n  );\r\n  const data = await response.json();\r\n\r\n  return data;\r\n};\r\n","import * as budget from './budget.fetch';\r\nimport * as common from './common.fetch';\r\n\r\nexport default {\r\n  budget,\r\n  common,\r\n}","export const formatCurrency = (value) => {\r\n  const number = Number(value);\r\n\r\n  return new Intl.NumberFormat(\"pl\", {\r\n    style: \"currency\",\r\n    currency: \"PLN\",\r\n  }).format(number);\r\n};\r\n\r\nexport const formatDate = (string) => {\r\n  const date = new Date(string);\r\n\r\n  return new Intl.DateTimeFormat(\"pl\").format(date);\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const Category = styled.div`\r\n  border: 1px solid ${({ theme }) => theme.colors.gray.dark};\r\n  padding: ${({ theme }) => theme.spacing.xs}px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const ParentCategory = styled(Category)`\r\n  background-color: ${({ theme }) => theme.colors.gray.normal};\r\n`;\r\n\r\nexport const CategoryItem = styled(Category)`\r\n  background-color: ${({ theme }) => theme.colors.gray.light};\r\n`;\r\n\r\nexport const CategoryAmount = styled.span`\r\n  font-weight: 700;\r\n  color: ${({ theme, negative }) =>\r\n    negative ? theme.colors.red.normal : theme.colors.green.normal};\r\n`;\r\n","import React, { useMemo } from \"react\";\r\n\r\nimport {\r\n  ParentCategory as Root,\r\n  CategoryAmount,\r\n} from \"./BudgetCategoryList.css\";\r\nimport { formatCurrency } from \"utils\";\r\n\r\nfunction ParentCategory({ name, onClick, categories, transactions, amount }) {\r\n  const categoryLeftValue = useMemo(() => {\r\n    if (!!amount) return null;\r\n\r\n    const budgeted = (() => {\r\n      try {\r\n        return categories.reduce((acc, category) => acc + category.budget, 0);\r\n      } catch (error) {\r\n        return null;\r\n      }\r\n    })();\r\n\r\n    const parentCategoryTransactions = transactions.filter((transaction) => {\r\n      return categories.find(\r\n        (category) => category.categoryId === transaction.categoryId\r\n      );\r\n    });\r\n\r\n    const spentOnParentCategory = parentCategoryTransactions.reduce(\r\n      (acc, transaction) => acc + transaction.amount,\r\n      0\r\n    );\r\n\r\n    const totalLeft = budgeted ? budgeted - spentOnParentCategory : null;\r\n\r\n    return totalLeft;\r\n  }, [categories, transactions, amount]);\r\n\r\n  const amountValue = useMemo(\r\n    () => amount || categoryLeftValue,\r\n    [amount, categoryLeftValue]\r\n  );\r\n\r\n  return (\r\n    <Root onClick={onClick}>\r\n      <span>{name}</span>\r\n      <CategoryAmount negative={amountValue < 0}>\r\n        {formatCurrency(amountValue)}\r\n      </CategoryAmount>\r\n    </Root>\r\n  );\r\n}\r\n\r\nexport default ParentCategory;\r\n","import React from \"react\";\r\n\r\nimport { CategoryItem as Root, CategoryAmount } from \"./BudgetCategoryList.css\";\r\nimport { formatCurrency } from \"utils\";\r\n\r\nfunction CategoryItem({ name, item, transactions }) {\r\n  const categoryTransactions = transactions.filter(\r\n    (transaction) => transaction.categoryId === item.id\r\n  );\r\n  const spentOnCategory = categoryTransactions.reduce(\r\n    (acc, transaction) => acc + transaction.amount,\r\n    0\r\n  );\r\n  const totalLeft = item.budget - spentOnCategory;\r\n\r\n  return (\r\n    <Root>\r\n      <span>{name}</span>\r\n      <CategoryAmount negative={totalLeft < 0}>\r\n        {formatCurrency(totalLeft)}\r\n      </CategoryAmount>\r\n    </Root>\r\n  );\r\n}\r\n\r\nexport default CategoryItem;\r\n","import React, { useRef, useMemo, useCallback, useContext } from \"react\";\r\nimport \"styled-components/macro\";\r\nimport { groupBy } from \"lodash\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useQuery } from \"react-query\";\r\n\r\nimport API from \"data/fetch\";\r\n\r\nimport { ToggleableList } from \"components\";\r\nimport ParentCategory from \"./ParentCategory\";\r\nimport CategoryItem from \"./CategoryItem\";\r\n\r\nimport BudgetContext from \"data/context/budget.context\";\r\n\r\nfunction BudgetCategoryList() {\r\n  const { data: budget } = useQuery(\r\n    [\"budget\", { id: 1 }],\r\n    API.budget.fetchBudget\r\n  );\r\n  const { data: allCategories } = useQuery(\r\n    \"allCategories\",\r\n    API.common.fetchAllCategories\r\n  );\r\n  const { data: budgetedCategories } = useQuery(\r\n    [\"budgetedCategories\", { id: 1 }],\r\n    API.budget.fetchBudgetedCategories\r\n  );\r\n  const { dispatch } = useContext(BudgetContext.store);\r\n  const setSelectedParentCategoryId = useCallback(\r\n    (id) =>\r\n      dispatch({\r\n        type: \"selectParentCategoryId\",\r\n        payload: id,\r\n      }),\r\n    [dispatch]\r\n  );\r\n\r\n  const { t } = useTranslation();\r\n  const handleClickParentCategoryRef = useRef(null);\r\n  const budgetedCategoriesByParent = useMemo(\r\n    () =>\r\n      groupBy(\r\n        budgetedCategories,\r\n        (item) =>\r\n          allCategories.find((category) => category.id === item.categoryId)\r\n            .parentCategory.name\r\n      ),\r\n    [budgetedCategories, allCategories]\r\n  );\r\n  const handleClearParentCategorySelect = useCallback(() => {\r\n    setSelectedParentCategoryId();\r\n    handleClickParentCategoryRef.current();\r\n  }, [setSelectedParentCategoryId, handleClickParentCategoryRef]);\r\n  const handleSelectRestParentCategories = useCallback(() => {\r\n    setSelectedParentCategoryId(null);\r\n    handleClickParentCategoryRef.current();\r\n  }, [setSelectedParentCategoryId, handleClickParentCategoryRef]);\r\n\r\n  const listItems = useMemo(\r\n    () =>\r\n      Object.entries(budgetedCategoriesByParent).map(\r\n        ([parentName, categories]) => ({\r\n          id: parentName,\r\n          Trigger: ({ onClick }) => (\r\n            <ParentCategory\r\n              name={parentName}\r\n              onClick={() => {\r\n                onClick(parentName);\r\n                setSelectedParentCategoryId(parentName);\r\n              }}\r\n              categories={categories}\r\n              transactions={budget.transactions}\r\n            />\r\n          ),\r\n          children: categories.map((budgetedCategory) => {\r\n            const { name } = allCategories.find(\r\n              (category) => category.id === budgetedCategory.categoryId\r\n            );\r\n\r\n            return (\r\n              <CategoryItem\r\n                key={budgetedCategory.id}\r\n                name={name}\r\n                item={budgetedCategory}\r\n                transactions={budget.transactions}\r\n              />\r\n            );\r\n          }),\r\n        })\r\n      ),\r\n    [\r\n      allCategories,\r\n      budget.transactions,\r\n      budgetedCategoriesByParent,\r\n      setSelectedParentCategoryId,\r\n    ]\r\n  );\r\n\r\n  const totalSpent = useMemo(\r\n    () =>\r\n      budget.transactions.reduce(\r\n        (acc, transaction) => acc + transaction.amount,\r\n        0\r\n      ),\r\n    [budget.transactions]\r\n  );\r\n  const restToSpent = useMemo(\r\n    () => budget.totalAmount - totalSpent,\r\n    [budget.totalAmount, totalSpent]\r\n  );\r\n  const amountTaken = useMemo(\r\n    () =>\r\n      budgetedCategories.reduce((acc, budgetedCategory) => {\r\n        const categoryTransactions = budget.transactions.filter(\r\n          (transaction) => transaction.categoryId === budgetedCategory.id\r\n        );\r\n\r\n        const categoryExpenses = categoryTransactions.reduce(\r\n          (acc, transaction) => acc + transaction.amount,\r\n          0\r\n        );\r\n\r\n        return acc + Math.max(categoryExpenses, budgetedCategory.budget);\r\n      }, 0),\r\n    [budget.transactions, budgetedCategories]\r\n  );\r\n\r\n  const notBudgetedTransaction = useMemo(\r\n    () =>\r\n      budget.transactions.filter((transaction) => {\r\n        return !budgetedCategories.find(\r\n          (budgetedCategory) => budgetedCategory.id === transaction.categoryId\r\n        );\r\n      }),\r\n    [budget.transactions, budgetedCategories]\r\n  );\r\n  const notBudgetedExpenses = useMemo(\r\n    () =>\r\n      notBudgetedTransaction.reduce(\r\n        (acc, transaction) => acc + transaction.amount,\r\n        0\r\n      ),\r\n    [notBudgetedTransaction]\r\n  );\r\n\r\n  const availableForRestCategories = useMemo(\r\n    () => budget.totalAmount - amountTaken - notBudgetedExpenses,\r\n    [budget.totalAmount, amountTaken, notBudgetedExpenses]\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        css={`\r\n          border-bottom: 5px solid ${({ theme }) => theme.colors.gray.light};\r\n        `}\r\n      >\r\n        <ParentCategory\r\n          name={budget.name}\r\n          amount={restToSpent}\r\n          onClick={handleClearParentCategorySelect}\r\n        />\r\n      </div>\r\n\r\n      <ToggleableList\r\n        items={listItems}\r\n        clickRef={handleClickParentCategoryRef}\r\n      />\r\n\r\n      <div\r\n        css={`\r\n          border-top: 5px solid ${({ theme }) => theme.colors.gray.light};\r\n        `}\r\n      >\r\n        <ParentCategory\r\n          name={t(\"Other categories\")}\r\n          amount={availableForRestCategories}\r\n          onClick={handleSelectRestParentCategories}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BudgetCategoryList;\r\n","export { default } from './BudgetCategoryList';"],"sourceRoot":""}